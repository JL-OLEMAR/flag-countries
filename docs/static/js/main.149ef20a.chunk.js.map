{"version":3,"sources":["components/Country.js","components/CountrySelected.js","components/Region.js","components/Input.js","components/Search.js","components/Wrapper.js","pages/ActionList.js","pages/CountryList.js","pages/CountryPage.js","pages/Header.js","App.js","reducer.js","index.js"],"names":["Country","alpha2Code","capital","flag","name","population","region","history","useHistory","CountryStyled","onClick","push","slugify","alt","loading","src","className","Intl","NumberFormat","format","styled","div","CountrySelected","nativeName","subregion","topLevelDomain","currencies","languages","borders","CountrySelectedStyled","map","item","i","Region","dispatch","useDispatch","useState","dropdown","setdropdown","onRegionChange","selectEvent","type","payload","regionSelected","RegionFilterStyled","id","Input","props","InputStyled","label","Search","inputValue","setInputValue","SearchStyled","placeholder","value","onChange","target","Wrapper","children","WrapperStyled","ActionList","ActionListStyled","CountryList","countryListByName","useSelector","state","countryList","filterByRegion","length","coutryFilteredByRegion","useEffect","window","fetch","then","resp","json","list","catch","alert","CountryListStyled","cioc","CountryPage","match","DBcountry","find","params","country","setCountry","toLowerCase","CountryPageStyled","goBack","Header","setDarkMode","darkMode","HeaderStyled","to","store","createStore","action","filter","includes","App","mainClass","changeMedia","mq","matches","matchMedia","addEventListener","removeEventListener","component","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.149ef20a.chunk.js","sourcesContent":["import { useHistory } from 'react-router-dom'\nimport slugify from 'slugify'\nimport styled from 'styled-components'\n\nexport function Country ({\n  alpha2Code,\n  capital,\n  flag,\n  name,\n  population,\n  region\n}) {\n  const history = useHistory()\n\n  const handleClick = () => {\n    history.push(`/country/${slugify(alpha2Code)}`)\n  }\n\n  return (\n    <CountryStyled onClick={handleClick}>\n      <img alt='' loading='lazy' src={flag} />\n      <div className='details'>\n        <h2>{name}</h2>\n        <p>\n          <strong>Population: </strong> {new Intl.NumberFormat().format(population)}\n        </p>\n        <p>\n          <strong>Region: </strong>{region}\n        </p>\n        <p>\n          <strong>Capital: </strong>{capital}\n        </p>\n      </div>\n    </CountryStyled>\n  )\n}\n\nconst CountryStyled = styled.div`\n  cursor: pointer;\n  text-align: left;\n  border-radius: 5px;\n  box-shadow: 0 0 7px 2px rgba(0, 0, 0, 0.03);\n  &:hover .details {\n    border-radius: 0 0 5px 5px;\n    border: 1px solid var(--black);\n    border-top: none;\n  }\n  img {\n    width: 100%;\n    height: 160px;\n    object-fit: cover;\n    vertical-align: top;\n    border-radius: 5px 5px 0 0;\n  }\n  .details {\n    padding: 1.5em;\n    border: 1px solid transparent;\n    border-top: none;\n    transition: 0.3s border;\n    background: var(--white);\n  }\n  h2 {\n    margin: 0;\n    margin-bottom: 1rem;\n    font-size: 18px;\n    font-weight: 700;\n  }\n  p {\n    font-size: 0.9em;\n    margin-bottom: 0.5rem;\n  }\n`\n","import styled from 'styled-components'\n\nexport function CountrySelected ({\n  flag,\n  name,\n  nativeName,\n  population,\n  region,\n  subregion,\n  capital,\n  topLevelDomain,\n  currencies = [],\n  languages = [],\n  borders = []\n}) {\n  return (\n    <CountrySelectedStyled>\n      <img alt='' src={flag} />\n      <div>\n        <h2>{name}</h2>\n        <div className='grid'>\n          <div>\n            <p>\n              <strong>Native Name: </strong>{nativeName}\n            </p>\n            <p>\n              <strong>Population: </strong>{new Intl.NumberFormat().format(population)}\n            </p>\n            <p>\n              <strong>Region: </strong>{region}\n            </p>\n            <p>\n              <strong>Sub Region: </strong>{subregion}\n            </p>\n            <p>\n              <strong>Capital: </strong>{capital}\n            </p>\n          </div>\n          <div>\n            <p>\n              <strong>Top Level Domain: </strong>{topLevelDomain}\n            </p>\n            <p>\n              <strong>Currencies: </strong>\n              {currencies.map((item, i) => (\n                <span key={i}>{item.name}</span>\n              ))}\n            </p>\n            <p className='languages'>\n              <strong>Languages: </strong>\n              {languages.map((item, i) => (\n                <span key={i}>{item.name}</span>\n              ))}\n            </p>\n          </div>\n        </div>\n        <p className='borders'>\n          <strong>Border Countries: </strong>\n        </p>\n        {borders.map((item, i) => (\n          <span key={i} className='border-item'>\n            {item}\n          </span>\n        ))}\n      </div>\n    </CountrySelectedStyled>\n  )\n}\n\nconst CountrySelectedStyled = styled.div`\n  margin-top: 3em;\n  padding-bottom: 3em;\n  img {\n    width: 100%;\n    margin-bottom: 2em;\n  }\n  .grid {\n    display: grid;\n    grid-row-gap: 1em;\n  }\n  .border-item {\n    padding: 0.5em 2em;\n    border-radius: 5px;\n    margin-right: 15px;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n    display: inline-flex;\n    margin-bottom: 15px;\n    background: var(--white);\n  }\n  .languages {\n    span {\n      margin-right: 5px;\n      &:after {\n        content: ',';\n      }\n      &:last-child {\n        &:after {\n          display: none;\n        }\n      }\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-column-gap: 120px;\n    margin-top: 5em;\n    .grid {\n      grid-template-columns: 1fr 1fr;\n    }\n    .borders {\n      display: inline-flex;\n      margin-right: 1em;\n      margin-top: 3.5em;\n    }\n  }\n`\n","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport styled from 'styled-components'\n\nconst filterByRegionAction = (regionSelected) => {\n  return {\n    type: 'FILTER_BY_REGION',\n    payload: { regionSelected }\n  }\n}\n\nexport function Region () {\n  const dispatch = useDispatch()\n  const [dropdown, setdropdown] = useState(false)\n\n  const onRegionChange = (selectEvent) => {\n    dispatch(filterByRegionAction(selectEvent))\n  }\n\n  return (\n    <>\n      <RegionFilterStyled>\n        <div\n          className={`${dropdown ? 'dropdown open' : 'dropdown'}`}\n          id='filter'\n          onClick={() => setdropdown(!dropdown)}\n        >\n          Filter by Region\n          <i className='fas fa-chevron-down' />\n          <ul>\n            <li onClick={() => onRegionChange('Africa')}>Africa</li>\n            <li onClick={() => onRegionChange('Americas')}>Americas</li>\n            <li onClick={() => onRegionChange('Asia')}>Asia</li>\n            <li onClick={() => onRegionChange('Europe')}>Europe</li>\n            <li onClick={() => onRegionChange('Oceania')}>Oceania</li>\n          </ul>\n        </div>\n      </RegionFilterStyled>\n    </>\n  )\n}\n\nconst RegionFilterStyled = styled.div`\n  * {\n    box-sizing: border-box;\n  }\n  .dropdown {\n    border-radius: 5px;\n    background-color: var(--white);\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\n    cursor: pointer;\n    text-align: center;\n    font-size: 12px;\n    padding: 20px;\n    position: relative;\n    background: var(--white);\n  }\n  .btn-toggle .fas {\n    display: none;\n  }\n\n  body.dark .btn-toggle .fas {\n    display: inline-block;\n  }\n\n  .dropdown .fa-chevron-down {\n    margin-left: 10px;\n  }\n\n  .dropdown ul {\n    border-radius: 4px;\n    background-color: var(--background-el);\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.06), 0 1px 2px rgba(0, 0, 0, 0.12);\n    display: none;\n    padding: 10px;\n    text-align: center;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    list-style-type: none;\n    background: var(--white);\n    width: 100%;\n    z-index: 99;\n  }\n\n  .dropdown.open ul {\n    display: block;\n  }\n\n  .dropdown ul li {\n    margin: 10px 0;\n  }\n`\n","import styled from 'styled-components'\n\nexport function Input ({ ...props }) {\n  return (\n    <InputStyled>\n      <i className='fas fa-search' />\n      <input type='text' {...props} />\n    </InputStyled>\n  )\n}\n\nconst InputStyled = styled.label`\n  display: inline-flex;\n  background: var(--white);\n  align-items: center;\n  box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\n  padding: 0 2rem;\n  border-radius: 5px;\n  flex: 1;\n  i {\n    margin-right: 1em;\n    color: #c4c4c4;\n  }\n  input {\n    /* width: 100%; */\n    flex: 1;\n    border: none;\n    height: 48px;\n    line-height: 48px;\n    font-size: 0.7em;\n    outline: 0;\n    color: var(--black);\n    background: var(--white);\n    &::-webkit-input-placeholder {\n      color: #c4c4c4;\n    }\n  }\n`\n","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { Input } from './Input.js'\n\nexport function Search () {\n  const [inputValue, setInputValue] = useState('')\n  const dispatch = useDispatch()\n\n  const filterByName = ({ target }) => {\n    setInputValue(target.value)\n    dispatch({\n      type: 'SET_COUNTRY_BY_NAME',\n      payload: target.value\n    })\n  }\n  const clearInput = () => {\n    dispatch({\n      type: 'SET_COUNTRY_BY_NAME',\n      payload: ''\n    })\n    setInputValue('')\n  }\n\n  return (\n    <SearchStyled>\n      {inputValue && <i className='fas fa-times close' onClick={clearInput} />}\n      <Input\n        placeholder='Search for a country...'\n        value={inputValue}\n        onChange={filterByName}\n      />\n    </SearchStyled>\n  )\n}\n\nconst SearchStyled = styled.div`\n  display: flex;\n  position: relative;\n  .close {\n    position: absolute;\n    right: 1em;\n    top: 1em;\n    border-radius: 50%;\n    border: none;\n    box-shadow: 0 2px 9px 0 rgba(0, 0, 0, 0.05);\n  }\n`\n","import styled from 'styled-components'\n\nexport function Wrapper ({ children }) {\n  return <WrapperStyled>{children}</WrapperStyled>\n}\n\nconst WrapperStyled = styled.div`\n  max-width: 1312px;\n  margin: auto;\n  padding: 0 1rem;\n`\n","import styled from 'styled-components'\n\nimport { Region, Search, Wrapper } from '../components'\n\nexport function ActionList () {\n  return (\n    <ActionListStyled>\n      <Wrapper>\n        <div className='grid'>\n          <Search />\n          <span />\n          <Region />\n        </div>\n      </Wrapper>\n    </ActionListStyled>\n  )\n}\n\nconst ActionListStyled = styled.div`\n  .grid {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-row-gap: 20px;\n  }\n  @media screen and (min-width: 768px) {\n    .grid {\n      grid-template-columns: 480px 1fr 164px;\n    }\n  }\n`\n","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { Country, Wrapper } from '../components'\n\nexport function CountryList () {\n  const dispatch = useDispatch()\n  const countryListByName = useSelector((state) => state.countryListByName)\n\n  const countryList = useSelector((state) => {\n    if (state.filterByRegion !== '' && countryListByName.length === 0) {\n      return state.coutryFilteredByRegion\n    }\n    if (countryListByName.length > 0) {\n      return countryListByName\n    }\n\n    return state.countryList\n  })\n\n  useEffect(() => {\n    window.fetch('https://restcountries.com/v2/all')\n      .then((resp) => resp.json())\n      .then((list) => {\n        dispatch({\n          type: 'SET_COUNTRY_LIST',\n          payload: list\n        })\n      })\n      .catch(() => window.alert('hubo un error'))\n  }, [dispatch])\n\n  return (\n    <Wrapper>\n      <CountryListStyled>\n        {countryList.map(\n          ({\n            name,\n            flag,\n            population,\n            capital,\n            region,\n            nativeName,\n            cioc,\n            alpha2Code\n          }) => {\n            return (\n              <Country\n                key={name}\n                alpha2Code={alpha2Code}\n                capital={capital}\n                cioc={cioc}\n                flag={flag}\n                name={name}\n                nativeName={nativeName}\n                population={population}\n                region={region}\n              />\n            )\n          }\n        )}\n      </CountryListStyled>\n    </Wrapper>\n  )\n}\n\nconst CountryListStyled = styled.div`\n  display: grid;\n  grid-row-gap: 2.3em;\n  grid-auto-flow: columns;\n  grid-column-gap: 66px;\n  grid-template-columns: repeat(auto-fill, 270px);\n  background: var(--background);\n  justify-content: center;\n  padding: 3em 0;\n`\n","import { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { CountrySelected, Wrapper } from '../components'\n\nexport function CountryPage ({ match, history }) {\n  const DBcountry = useSelector((state) =>\n    state.countryList.find((item) => item.alpha2Code === match.params.id)\n  )\n  const [country, setCountry] = useState(DBcountry)\n\n  useEffect(() => {\n    if (!country) {\n      window.fetch(`https://restcountries.com/v2/alpha/${match.params.id.toLowerCase()}`)\n        .then((resp) => resp.json())\n        .then(setCountry)\n    }\n  }, [country, match.params.id])\n\n  const handleClick = () => {\n    history.goBack()\n  }\n\n  return (\n    <CountryPageStyled>\n      <Wrapper>\n        <button className='back' onClick={handleClick}>\n          <i className='fas fa-long-arrow-alt-left' /> Back\n        </button>\n        <CountrySelected {...country} />\n      </Wrapper>\n    </CountryPageStyled>\n  )\n}\n\nconst CountryPageStyled = styled.div`\n  .back {\n    background: var(--white);\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n    padding: 0.7em 2.2em;\n    border-radius: 5px;\n    border: none;\n    cursor: pointer;\n    margin-top: 1em;\n    color: var(--black);\n    i {\n      margin-right: 5px;\n    }\n  }\n  @media screen and (min-width: 1024px) {\n    .back {\n      margin-top: 3em;\n    }\n  }\n`\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { Wrapper } from '../components'\n\nexport function Header ({ setDarkMode, darkMode }) {\n  const handleClick = () => {\n    setDarkMode(!darkMode)\n  }\n\n  return (\n    <HeaderStyled>\n      <Wrapper>\n        <div className='content'>\n          <Link to='/'>\n            <h1>Flags of the world</h1>\n          </Link>\n          <div className='dark-mode'>\n            <p onClick={handleClick}>\n              <span className='moon'>\n                {darkMode\n                  ? <i className='fas fa-moon' />\n                  : <i className='far fa-moon' />}\n              </span>\n              Dark Mode\n            </p>\n          </div>\n        </div>\n      </Wrapper>\n    </HeaderStyled>\n  )\n}\n\nconst HeaderStyled = styled.div`\n  background: var(--white);\n  margin-bottom: 1em;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.06);\n  .content {\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n  h1 {\n    font-size: 14px;\n  }\n  a {\n    text-decoration: none;\n    color: var(--dark);\n  }\n  .dark-mode {\n    cursor: pointer;\n    .moon {\n      transform: rotate(-25deg);\n      display: inline-flex;\n      margin-right: 10px;\n    }\n    p {\n      font-size: 12px;\n      font-weight: 600;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 3em;\n    h1 {\n      font-size: 24px;\n    }\n    p {\n      font-size: 1rem;\n    }\n  }\n`\n","import { useState, useEffect } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport { reducer } from './reducer.js'\nimport { ActionList, CountryList, CountryPage, Header } from './pages'\nimport './App.css'\n\nconst initialState = {\n  countryList: [],\n  countryListByName: [],\n  coutryFilteredByRegion: [],\n  filterByRegion: ''\n}\n\nconst store = createStore(reducer, initialState)\n\nexport function App () {\n  const [darkMode, setDarkMode] = useState(false)\n  const mainClass = darkMode ? 'is-dark-mode' : 'is-light-mode'\n\n  // mq: Media Query\n  const changeMedia = (mq) => {\n    setDarkMode(mq.matches)\n  }\n\n  useEffect(() => {\n    const mq = window.matchMedia('(prefers-color-scheme: dark)')\n    mq.addEventListener('change', changeMedia)\n    setDarkMode(mq.matches)\n    return () => mq.removeEventListener('change', changeMedia)\n  }, [])\n\n  return (\n    <main className={mainClass}>\n      <Provider store={store}>\n        <BrowserRouter>\n          <Header darkMode={darkMode} setDarkMode={setDarkMode} />\n          <Switch>\n            <Route component={CountryPage} path='/country/:id' />\n            <Route path='/'>\n              <ActionList />\n              <CountryList />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    </main>\n  )\n}\n","export function reducer (state, action) {\n  switch (action.type) {\n    case 'SET_COUNTRY_LIST': {\n      return { ...state, countryList: action.payload }\n    }\n\n    case 'SET_COUNTRY_BY_NAME': {\n      let list\n\n      if (state.filterByRegion !== '') {\n        list = state.coutryFilteredByRegion\n      } else {\n        list = state.countryList\n      }\n      const countryListByName = list.filter(country => (\n        country.name.toLowerCase().includes(action.payload.toLowerCase())\n      ))\n\n      return { ...state, countryListByName }\n    }\n\n    case 'FILTER_BY_REGION': {\n      const { regionSelected } = action.payload\n      if (regionSelected === '') return { ...state, coutryFilteredByRegion: [], filterByRegion: '' }\n      const coutryFilteredByRegion = state.countryList.filter((country) => country.region === regionSelected)\n      return { ...state, coutryFilteredByRegion, filterByRegion: regionSelected }\n    }\n\n    default: {\n      return state\n    }\n  }\n}\n","import ReactDOM from 'react-dom'\nimport { App } from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}